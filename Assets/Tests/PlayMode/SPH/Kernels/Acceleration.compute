
#include "Constants.cginc"

#pragma kernel ComputeAcceleration

StructuredBuffer<float> _Densities;
StructuredBuffer<float3> _PressureForces;
StructuredBuffer<float3> _ViscosityForces;

RWStructuredBuffer<float3> _Accelerations;


uint _nBodies;
float _g;

//kernel dispatch parameters
uint3 grid_dim;
uint3 group_dim;


[numthreads(NUM_THREADS, 1, 1)]
void ComputeAcceleration(uint thread_id : SV_DispatchThreadID)
{
	float3 g_down = {0.0f, -_g, 0.0f};
	//grid-stride loop over the particles p_id to compute each particle acceleration
	// from the 3 forces, pressure force, viscocity force, surface tension force.
	// 
	for (uint p_id = thread_id;
		p_id < _nBodies;
		p_id += grid_dim.x * group_dim.x  //the grid size, no SV variable to tell you how many groups were launched!
		)
	{
		_Accelerations[p_id] = (_PressureForces[p_id] + _ViscosityForces[p_id]) / _Densities[p_id] + g_down;
	}
}
