//hlsl
#pragma kernel GroupMemoryTest


globallycoherent RWStructuredBuffer<float> my_global_array;
RWStructuredBuffer<float> read_result;

//This is passed in by ComputeKernel abstraction, and gives the 
//number of blocks launched in each dimension
//It must exist!

uint3 grid_dim;
uint3 group_dim;

//each group only contains 1 thread
[numthreads(1, 1, 1)]
void GroupMemoryTest(uint3 thread_id : SV_GroupThreadID, uint3 group_id : SV_GroupID)
{
	
	my_global_array[group_id.x] = group_id.x;

	//every memory barrier I could find
	DeviceMemoryBarrier();
	DeviceMemoryBarrierWithGroupSync();
	AllMemoryBarrier();
	AllMemoryBarrierWithGroupSync();
	GroupMemoryBarrierWithGroupSync();
	GroupMemoryBarrier();

	if (group_id.x == 0 && thread_id.x == 0)
	{
		read_result[1] = my_global_array[1];
	}

	if(group_id.x == 1 && thread_id.x == 0)
	{
		read_result[0] = my_global_array[0];
	}



}
